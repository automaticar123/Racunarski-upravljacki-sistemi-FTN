C51 COMPILER V8.16   DOMACI                                                                12/20/2022 18:31:57 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE DOMACI
OBJECT MODULE PLACED IN domaci.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE domaci.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <at89c51rc2.h>
   2          
   3          unsigned char buffer[10];
   4          unsigned char buffer_pointer = 0x00;
   5          unsigned char error_flag = 0;
   6          
   7          unsigned char status = 0x00;
   8          unsigned char start = 0x00;
   9          unsigned char state = 0x00;
  10          unsigned char previous_state = 0x00;
  11          unsigned char speed = 0x01;
  12          unsigned char state_P2 = 0x00;
  13          
  14          unsigned char counter = 0x00;
  15          unsigned char counter_set = 0xC8;
  16          
  17          unsigned char counter_for_program_3 = 0x06;
  18          unsigned char program_3[7] = {0x81, 0x42, 0x24, 0x18, 0x24, 0x42};
  19          unsigned char counter_for_program_4 = 0x0C;
  20          unsigned char program_4[12] = {0x01, 0x02, 0x03, 0x05, 0x08, 0x0D, 0x15, 0x22, 0x37, 0x59, 0x90, 0xE9};
  21          
  22          unsigned char test;
  23          
  24          void init(void) {
  25   1              
  26   1              EA = 0; 
  27   1      
  28   1              SCON = 0x50; // 8-bit UART sa promjenljivim baud rate-om
  29   1              PCON = 0x80;
  30   1              BDRCON = 0x1C;
  31   1              BRL = 0xFD;
  32   1              ES = 1;
  33   1      
  34   1              TMOD = 0x10; // Timer 1 u 16-bit modu rada
  35   1              TR1 = 1;
  36   1              ET1 = 1;
  37   1              TL1 = 0x00;
  38   1              TH1 = 0xEE;
  39   1      
  40   1              EA = 1;
  41   1      
  42   1              P2 = 0x00;
  43   1      }
  44          
  45          void diode_activate(unsigned char state) {
  46   1      
  47   1              switch(state) {
  48   2              
  49   2                      case 0x01 : case 0x02 :
  50   2                              state_P2 = ~state_P2;
  51   2                              break;
  52   2      
  53   2                      case 0x03:
  54   2                              if(state_P2 == 0x00 || state_P2 == 0x80) {
  55   3                              
C51 COMPILER V8.16   DOMACI                                                                12/20/2022 18:31:57 PAGE 2   

  56   3                                      state_P2 = 0x01;
  57   3                                      break;
  58   3                              }       
  59   2                              state_P2 <<= 1;
  60   2                              break;
  61   2      
  62   2                      case 0x04:
  63   2                              if(counter_for_program_3 == 0x06) {
  64   3                                      counter_for_program_3 = 0x00;   
  65   3                              }
  66   2                              state_P2 = program_3[counter_for_program_3++];
  67   2                              break;                  
  68   2      
  69   2                      case 0x05:
  70   2                              if(counter_for_program_4 == 0x0C) {
  71   3                                      counter_for_program_4 = 0x00;   
  72   3                              }
  73   2                              state_P2 = program_4[counter_for_program_4++];
  74   2                              break;
  75   2      
  76   2                      default:
  77   2                              state_P2 = 0xFF;
  78   2                              break;
  79   2              }
  80   1      }
  81          
  82          void parseCommand(void) {
  83   1      
  84   1              if(buffer[0] == '(' &&
  85   1                 buffer[1] == 'S' &&
  86   1                 buffer[2] == 'T' &&
  87   1                 buffer[3] == 'A' &&
  88   1                 buffer[4] == 'R' &&
  89   1                 buffer[5] == 'T' &&
  90   1                 buffer[6] == ')' && start != 0x01) {
  91   2                 
  92   2                      start = 0x01;
  93   2                      state = 0x01;
  94   2                      state_P2 = 0x00;
  95   2              }
  96   1              
  97   1              else if(buffer[0] == '(' &&
  98   1                 buffer[1] == 'S' &&
  99   1                 buffer[2] == 'T' &&
 100   1                 buffer[3] == 'O' &&
 101   1                 buffer[4] == 'P' &&
 102   1                 buffer[5] == ')' && start != 0x00) {
 103   2                 
 104   2                      start = 0x00;
 105   2                      state = 0x00;
 106   2                      speed = 0x01;
 107   2                      previous_state = 0x00;
 108   2                      state_P2 = 0x00;
 109   2                      counter_set = 0xC8;
 110   2                      counter_for_program_3 = 0x06;
 111   2                      counter_for_program_4 = 0x0C;
 112   2                      counter = 0x00; 
 113   2              }
 114   1      
 115   1              else if(buffer[0] == '(' && 
 116   1                              buffer[1] == 'P' &&
 117   1                              buffer[2] == 'R' &&
C51 COMPILER V8.16   DOMACI                                                                12/20/2022 18:31:57 PAGE 3   

 118   1                              buffer[3] == ':' &&
 119   1                              buffer[4] >= '1' && buffer[4] <= '4' &&
 120   1                              buffer[5] == ')' &&
 121   1                              state != buffer[4] - 48 + 1 && start) {
 122   2                              
 123   2                      state = buffer[4] - 48 + 1;             
 124   2              }
 125   1      
 126   1              else if(buffer[0] == '(' &&
 127   1                              buffer[1] == 'B' &&
 128   1                              buffer[2] == 'R' &&
 129   1                              buffer[3] == ':' &&
 130   1                              (buffer[4] == '1' || buffer[4] == '2') &&
 131   1                              buffer[5] == ')' && speed != buffer[4] - 48 && start) {
 132   2      
 133   2                      speed = buffer[4] - 0x30;
 134   2                      if(speed == 2) {
 135   3                              counter = 0x00;
 136   3                              counter_set = 0x64;
 137   3                      }
 138   2                      else {
 139   3                              counter = 0x00;
 140   3                              counter_set = 0xC8;
 141   3                      }
 142   2              }
 143   1              else if(buffer[0] == '(' &&
 144   1                              buffer[1] == 'P' &&
 145   1                              buffer[2] == '?' &&
 146   1                              buffer[3] == ')') {
 147   2                              
 148   2                              SBUF = 0x30 + state - 1;
 149   2                              }
 150   1              else {
 151   2                      state = 0x06; // Error state
 152   2                      start = 0x00;
 153   2                      speed = 0x01;
 154   2                      previous_state = 0x00;
 155   2                      counter_set = 0xC8;
 156   2                      counter_for_program_3 = 0x06;
 157   2                      counter_for_program_4 = 0x0C;
 158   2                      counter = 0x00;
 159   2              }
 160   1      }
 161          
 162          void timer1_interrupt(void) interrupt 3{
 163   1              
 164   1              TL1 = 0x00;
 165   1              TH1 = 0xEE;
 166   1      
 167   1              if(++counter == counter_set) {
 168   2                      status = 0x01;
 169   2                      counter = 0x00;
 170   2      
 171   2                      if(state != previous_state) {
 172   3                              previous_state = state;
 173   3                              state_P2 = 0x00;
 174   3                              counter_for_program_3 = 0x06;
 175   3                              counter_for_program_4 = 0x0C;
 176   3                      }
 177   2              }       
 178   1      }
 179          
C51 COMPILER V8.16   DOMACI                                                                12/20/2022 18:31:57 PAGE 4   

 180          void asy_interrupt(void) interrupt 4{
 181   1              EA = 0;
 182   1      
 183   1              if(TI) {
 184   2                      TI = 0;
 185   2              }
 186   1      
 187   1              if(RI) {
 188   2                      
 189   2                      test = SBUF;
 190   2                      RI = 0;
 191   2                      
 192   2                      if(SBUF == '(') {
 193   3      
 194   3                              buffer_pointer = 0;
 195   3                      }
 196   2      
 197   2                      buffer[buffer_pointer++] = SBUF;
 198   2                      buffer_pointer = buffer_pointer % 10;
 199   2      
 200   2                      if(SBUF == ')') {
 201   3      
 202   3                              parseCommand();
 203   3                      }
 204   2              }
 205   1              EA = 1;                 
 206   1      }
 207          
 208          void main(void) {
 209   1      
 210   1              init();
 211   1      
 212   1              while(1){
 213   2                      
 214   2                      if(status) {
 215   3                              status = 0x00;
 216   3                              if(start) {
 217   4                                      diode_activate(state);
 218   4                              }
 219   3                      }
 220   2                      if(state == 0x06) {
 221   3                              state_P2 = 0xFF;
 222   3                      }
 223   2                      P2 = state_P2;
 224   2              }
 225   1      
 226   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    577    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     42    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
