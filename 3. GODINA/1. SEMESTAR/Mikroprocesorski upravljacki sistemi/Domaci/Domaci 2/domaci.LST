C51 COMPILER V8.16   DOMACI                                                                11/21/2022 14:45:40 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE DOMACI
OBJECT MODULE PLACED IN domaci.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE domaci.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <at89c51rc2.h>
   2          /*  
   3              P0_0 - START
   4              P0_1 - STOP
   5              P0_2 - PROGRAM 1
   6              P0_3 - PROGRAM 2
   7              P0_4 - PROGRAM 3
   8              P0_5 - PROGRAM 4
   9              PO_6 - BRZINA 1
  10              PO_7 - BRZINA 2
  11          */
  12          
  13          // FIBONACI NIZ: 0x01, 0x02, 0x03, 0x05, 0x08, 0x0D, 0x15, 0x22, 0x37, 0x59, 0x90, 0xE9 
  14          
  15          void delay(unsigned char speed) {
  16   1          int i, j;
  17   1          // BRZINA 1
  18   1          if(!speed) {
  19   2              for(i = 0; i < 200; i++) {
  20   3                  for(j = 0; j < 200; j++) {
  21   4      
  22   4                  }
  23   3              }
  24   2          }                                                      
  25   1          // BRZINA 2
  26   1          else {
  27   2              for(i = 0; i < 400; i++) {
  28   3                  for(j = 0; j < 400; j++) {
  29   4      
  30   4                  }
  31   3              }
  32   2          }
  33   1      }
  34          
  35          void state(unsigned char state_chg_det, unsigned char* state_P2, unsigned char* help) {
  36   1          switch (state_chg_det) {
  37   2              // PROGRAM 1
  38   2              default:
  39   2                  *state_P2 = ~(*state_P2);
  40   2                  break;
  41   2              // PROGRAM 2 
  42   2              case 0x08:
  43   2                  if(*state_P2 == 0x00) {
  44   3                      *state_P2 = 0x01;
  45   3                  }
  46   2                  else {
  47   3                      *state_P2 <<= 1;
  48   3                  }
  49   2                  break;
  50   2              // PROGRAM 3
  51   2              case 0x10:
  52   2                  if(*state_P2 == 0x00) {
  53   3                      *state_P2 = 0x80 + 0x01;
  54   3                  }
  55   2                  else if(*state_P2 == 0x18 || *state_P2 == 0x81) {
C51 COMPILER V8.16   DOMACI                                                                11/21/2022 14:45:40 PAGE 2   

  56   3                      *help = ~(*help);
  57   3                  }
  58   2      
  59   2                  if(*help == 0x00) {
  60   3                      *state_P2 = (((*state_P2)&0x0F)<<1) + (((*state_P2)&0xF0)>>1);
  61   3                  }
  62   2                  else {
  63   3                      *state_P2 = (((*state_P2)&0x0F)>>1) + (((*state_P2)&0xF0)<<1);
  64   3                  }
  65   2                              break;
  66   2              // PROGRAM 4
  67   2              case 0x20:
  68   2                  if(*state_P2 == 0xE9 || *state_P2 == 0x00) {
  69   3      
  70   3                      *state_P2 = 0x01;
  71   3                      *help = 0x01;
  72   3                  }
  73   2                  else{
  74   3                      state_chg_det = *state_P2;
  75   3                      *state_P2 += *help;
  76   3                      *help = state_chg_det;
  77   3                  }
  78   2                  break;
  79   2              case 0x80:
  80   2                  if(*state_P2 == 0xFF) {
  81   3                      *state_P2 = 0x00;
  82   3                  }
  83   2                  *state_P2 = *state_P2 + 0x01;
  84   2                  break;
  85   2          }
  86   1      }
  87          
  88          void main() {
  89   1      
  90   1          unsigned char previous_state_P0 = P0;
  91   1          unsigned char state_P2 = 0x00;
  92   1          unsigned char state_chg_det = 0x00;  
  93   1          unsigned char what_chg;
  94   1              unsigned char help = 0x00;
  95   1          unsigned char previous_state_chg_det = 0x00;
  96   1          unsigned char speed = 0x00;
  97   1          unsigned char start = 0x00;
  98   1          unsigned char stop = 0x00;
  99   1      
 100   1          P2 = 0x00;
 101   1          P0 = 0xFF;
 102   1      
 103   1          while(1) {
 104   2      
 105   2              state_chg_det = P0 ^ previous_state_P0; 
 106   2              // XOR kolo detektuje na kojem bitu je promjena
 107   2              previous_state_P0 = P0; 
 108   2              // Cuva se prethodno stanje P0 porta
 109   2              what_chg = state_chg_det & P0; 
 110   2              // AND kolo - kada je promjena = 0 (1->0), kada je promjena != 0 (0->1) 
 111   2      
 112   2              if((state_chg_det == 0x02 && what_chg == 0x00)) {
 113   3                  start = 0x00;
 114   3              }
 115   2              // Stisnut STOP - start se iskljucuje i ostaje se u istom stanju
 116   2      
 117   2              if((state_chg_det == 0x01 && what_chg == 0x00) || start == 0x01) {
C51 COMPILER V8.16   DOMACI                                                                11/21/2022 14:45:40 PAGE 3   

 118   3      
 119   3                  start = 0x01;
 120   3      
 121   3                  // Ako nije detektovana promjena brzine ili ako se opet stisne start
 122   3                  // Znaci da se bira novi MOD
 123   3                  if(state_chg_det != 0x00 &&
 124   3                     state_chg_det != 0x01 && 
 125   3                     state_chg_det != 0x40 && 
 126   3                     what_chg == 0x00) {
 127   4                      
 128   4                      state_P2 = 0x00;
 129   4                      help = 0x00;
 130   4                      state(state_chg_det, &state_P2, &help);
 131   4                      previous_state_chg_det = state_chg_det;
 132   4                  }
 133   3                  // Ako je detektovana promjena brzine ili nikakva promjena uopste,
 134   3                  // Mijenja se brzina ili se iterira stari MOD
 135   3                  else {
 136   4                      if(state_chg_det == 0x40 && what_chg == 0x00) {
 137   5                          speed = 0x01;
 138   5                      }
 139   4                      state(previous_state_chg_det, &state_P2, &help);
 140   4                  }
 141   3              }
 142   2              P2 = state_P2;
 143   2              delay(speed);
 144   2          }
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    445    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
